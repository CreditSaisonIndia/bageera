AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation Sample Template SQS'
Parameters:
  QueueName:
    Description: 'Optional name for the Queue.'
    Type: String
    Default: ''
  UsedeadletterQueue:
    Description: A dead-letter queue is a queue that other (source) queues can target
      for messages that can't be processed (consumed) successfully. You can set aside
      and isolate these messages in the dead-letter queue to determine why their processing
      doesn't succeed.
    Type: String
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
  VisTimeout:
    Type: Number
    Default: 30
    Description: 'Visibility Timeout for Queues'
  DLQVisTimeout:
    Type: Number
    Default: 30
    Description: 'Visibility Timeout for DLQ Queues'
  ServiceTags:
    Description: List of service tags Service, Owner, Department, Stage
    Type: CommaDelimitedList
Conditions:
  CreateDeadLetterQueue:
    Fn::Equals:
      - Ref: UsedeadletterQueue
      - 'true'
    
Resources:
  SQSQueue:
    Type: AWS::SQS::Queue
    Properties:
      SqsManagedSseEnabled: true
      VisibilityTimeout: !Ref VisTimeout
      QueueName: !Join [ '', [ !Ref QueueName, '-' , !Ref 'AWS::Region' ] ]
      # RedrivePolicy:
      #   Fn::If:
      #     - CreateDeadLetterQueue
      #     - deadLetterTargetArn:
      #         Fn::GetAtt:
      #           - MyDeadLetterQueue
      #           - Arn
      #       maxReceiveCount: 5
      #     - Ref: AWS::NoValue
      Tags:
        - Key: Service
          Value: !Select [ 0, !Ref ServiceTags ]
        - Key: Owner
          Value: !Select [ 1, !Ref ServiceTags ]
        - Key: Department
          Value: !Select [ 2, !Ref ServiceTags ]
        - Key: Stage
          Value: !Select [ 3, !Ref ServiceTags ]
  MyDeadLetterQueue:
    Condition: CreateDeadLetterQueue
    Type: AWS::SQS::Queue
    Properties:
      SqsManagedSseEnabled: true
      VisibilityTimeout: !Ref DLQVisTimeout
      QueueName: !Join [ '', [ !Ref QueueName, '-' , 'DLQ', '-' , !Ref 'AWS::Region' ] ]
      Tags:
        - Key: Service
          Value: !Select [ 0, !Ref ServiceTags ]
        - Key: Owner
          Value: !Select [ 1, !Ref ServiceTags ]
        - Key: Department
          Value: !Select [ 2, !Ref ServiceTags ]
        - Key: Stage
          Value: !Select [ 3, !Ref ServiceTags ]
Outputs:
  QueueURL:
    Description: URL of newly created SQS Queue
    Value:
      Ref: SQSQueue
    Export:
      Name: !Sub ${QueueName}-Url
  # DeadLetterQueueURL:
  #   Condition: CreateDeadLetterQueue
  #   Description: URL of the dead letter queue
  #   Value:
  #     Ref: MyDeadLetterQueue
  #   Export:
  #     Name: !Sub ${QueueName}-DLQ-Url
  QueueArn:
    Description: ARN of newly created SQS Queue
    Value: !GetAtt SQSQueue.Arn
    Export:
      Name: !Sub ${QueueName}-Arn
  # DeadLetterQueueArn:
  #   Description: ARN of the dead letter queue
  #   Value: !GetAtt MyDeadLetterQueue.Arn
  #   Export:
  #     Name: !Sub ${QueueName}-DLQ-Arn